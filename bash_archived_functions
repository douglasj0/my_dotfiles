#stty sane

#TERM=vt100
#[ -z $TERM ] && TERM=vt100	# if TERM isn't set make it vt100
#TERM=xterm

#export ALTERNATE_EDITOR=emacs
#export VISUAL=emacsclient
#export SVN_EDITOR='"vi"'

#LESS="aCegj20mqX"

###############
# Completions #
###############
# tab complete any hostname you've previously ssh'd to
# http://www.macosxhints.com/article.php?story=20080317085050719
#complete -W "$(sed -e 's/^  *//' -e '/^#/d' -e 's/[, ].*//' -e '/\[/d' ~/.ssh/known_hosts | sort -u)" ssh
_complete_ssh_hosts () {
        COMPREPLY=()
        cur="${COMP_WORDS[COMP_CWORD]}"
        comp_ssh_hosts=`cat ~/.ssh/known_hosts | \
                        cut -f 1 -d ' ' | \
                        sed -e s/,.*//g | \
                        grep -v ^# | \
                        uniq | \
                        grep -v "\[" ;
                if [ -f ~/.ssh/config ]; then
                        cat ~/.ssh/config | \
                                grep -i "^Host " | \
                                awk '{print $2}'
                fi`
        COMPREPLY=( $(compgen -W "${comp_ssh_hosts}" -- $cur))
        return 0
}
complete -F _complete_ssh_hosts ssh

top10a () { history | cut -f 5 -d' ' | sort | uniq -c | sort -n | tail; }
function du1 { du -s *(/) | sort -n ; }

# GNU Screen, opens SSH on a new screen window with the appropriate name.
function screen_ssh {
    numargs=$#
    screen -t ${!numargs} ssh $@
#    screen -t "$@" ssh "$@"
}
#if [ $TERM == "screen" -o $TERM == "vt102" ]; then
[ -n "$STY" -o -n "$WINDOW" ] && alias sshs=screen_ssh

function tabname {  # Set the tab name in OSX Terminal
     printf "\e]1;$1\a"
}

# Remove a host from the known_hosts file (Might be a better way...)
# there was, ssh-keygen -R hostnme/ip
remove-known-host () {
    local HOST=$1
    grep -v $HOST ~/.ssh/known_hosts > ~/.ssh/known_hosts.tmp
    mv ~/.ssh/known_hosts.tmp ~/.ssh/known_hosts
}

# Tableflip animation
flip() {
  echo;
  echo -en "( º_º）  ┬─┬   \r"; sleep .5;
  echo -en " ( º_º） ┬─┬   \r"; sleep .5;
  echo -en "  ( ºДº）┬─┬   \r"; sleep .5;
  echo -en "  (╯'Д'）╯︵⊏   \r"; sleep .5;
  echo -en "  (╯'□'）╯︵ ⊏  \r"; sleep .5;
  echo     "  (╯°□°）╯︵ ┻━┻"; sleep .5;
}

# Bounce animation
bounce() {
  echo;
  echo -en '°'"\r"; sleep .1;
  echo -en '°º'"\r"; sleep .1;
  echo -en '°º¤'"\r"; sleep .1;
  echo -en '°º¤ø'"\r"; sleep .1;
  echo -en '°º¤ø,'"\r"; sleep .1;
  echo -en '°º¤ø,¸'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤ø'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤ø,'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤ø,¸'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤ø,¸,'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤ø,¸,ø'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤ø,¸,ø,'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤ø,¸,ø,¸'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤ø,¸,ø,¸,'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤ø,¸,ø,¸,¸'"\r"; sleep .1;
  echo -en '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤ø,¸,ø,¸,¸¸'"\r"; sleep .1;
  echo     '°º¤ø,¸¸,ø¤º°º¤ø,¸,ø¤º¤ø,¸,ø,¸,¸¸¸¸'; sleep .1;
}

# Make and cd into a directory
mkcd() {
    mkdir "$@" || return "$?"
    shift $(( $# - 1 ))
    cd "$1"
}

function ? { echo "$*" | bc -l; }



cdls() {
  builtin cd "$*" && ls
}
alias cdl="cdls"

dls () {	# print directories then files
    /bin/ls -lF "$@" | egrep '^d|total';
    #/bin/ls -lFXB "$@" | egrep -v '^d|total';
    /bin/ls -lFB "$@" | egrep -v '^d|total';
}

# prints a box around text
box () { t="$1xxxx";c=${2:-=}; echo ${t//?/$c}; echo "$c $1 $c"; echo ${t//?/$c}; }

# mkdir and enter it immediately thereafter
mcd () { mkdir -p $1 && cd $1; }

# cd and run ls
cdl () { builtin cd "$@" && ls; }

findgrep () {	# find | grep
    if [ $# -eq 0 ]; then
        echo "findgrep: No arguments entered."; return 1
    else
        # "{.[a-zA-Z],}*" instead of "." makes the output cleaner
        find {.[a-zA-Z],}* -type f | xargs grep -n $* /dev/null \
        2> /dev/null
    fi
}

# Add a .bak extension to a file
bak () {
    mv $1 $1.bak
}

# Remove a .back extension from a file
unbak () {
    length=$((${#1} - 4))
    mv $1 ${1:0:$length}
}

#Get IPs for all network interfaces (linux only):
#ip() { ip a | grep "inet " | sed -e 's/^.*inet //g' -e 's/\/.*//g' | grep -v '127.0.0.1' }


###
# Tmuxinator
###
[ -f ~/bin/tmuxinator.bash ] && source ~/bin/tmuxinator.bash
alias tml="tmux list-sessions"
alias tma="tmux -2 attach -t $1"
alias tmk="tmux kill-session -t $1"


# Track directory, username, and cwd for remote logons.
#if [ "$TERM" = "eterm-color" ]; then
#if [ "x${INSIDE_EMACS}" != "x" ]; then
#if [ "${SSH_CLIENT%% *}" = "10.0.3.31" -o "${SSH_CLIENT%% *}" = "10.3.14.49" ]; then
#   PROMPT_COMMAND=set-eterm-dir
#   echo "We're inside Emacs"
#    echo "Run 'set-eterm-dir' to enable Emacs ansi-term directory tracking"
#fi

# Check if we're running inside of Emacs, change TERM to accomodate
#if [ -n "$INSIDE_EMACS" ]; then export TERM=vt100; fi
#[ "x$INSIDE_EMACS" != "x" ]] && export TERM=vt100

# about-alias 'the silver searcher (ag) aliases'
## Summary for args to less:
# less(1)
#   -M (-M or --LONG-PROMPT) Prompt very verbosely
#   -I (-I or --IGNORE-CASE) Searches with '/' ignore case
#   -R (-R or --RAW-CONTROL-CHARS) For handling ANSI colors
#   -F (-F or --quit-if-one-screen) Auto exit if <1 screen
#   -X (-X or --no-init) Disable termcap init & deinit
alias ag='ag --smart-case --pager="less -MIRFX"'

####
# More Aliases
###

conncount() {
  netstat -an|grep ^tcp|grep -v LISTEN|awk '{print $6}'|sort|uniq -c|awk '{sum+=$1} {print $2 "=" $1} END {print "------------\nTOTAL=" sum}'
}

mcd() { mkdir -p "$1" && cd "$1"; }

# Do quick arithmetic from the command line. Use "x" for multiplication
function math { echo "scale=2 ; $*" | sed -e "s:x:*:g" | sed -e "s:,::g" | bc; }

# Emacs Remote Directory Tracking (ansi-term)
#function set-eterm-dir {
    echo -e "\033AnSiTu" "$LOGNAME" # $LOGNAME is more portable than using whoami.
    echo -e "\033AnSiTc" "$(pwd)"
    if [ $UNAME = "SunOS" ]; then
        if [[ $(grep savvis-chi3-il /etc/hosts) ]]; then
            domain="savvis-chi3-il.rctanalytics.com";
        else
            domain="rctanalytics.com";
        fi
        # The -f option does something else on SunOS and is not needed anyway.
        hostname_options="";
    else
        domain-"";
        hostname_options="-f";
    fi
    echo -e "\033AnSiTh" "$(hostname $hostname_options)" # Using the -f option can cause problems on some OSes.
    history -a # Write history to disk.
}

# Colored man pages
#export GROFF_NO_SGR=1
manc() {
    env LESS_TERMCAP_mb=$'\E[01;31m'   \
    LESS_TERMCAP_md=$'\E[01;38;5;74m'  \
    LESS_TERMCAP_me=$'\E[0m'           \
    LESS_TERMCAP_se=$'\E[0m'           \
    LESS_TERMCAP_so=$'\E[38;5;246m'    \
    LESS_TERMCAP_ue=$'\E[0m'           \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}



###################
#   OS Specific   #
###################
case "$UNAME" in
SunOS)          # Based off of Solaris 10
if [[ ! -z $PS1 ]]; then echo ".Solaris bashrc loaded"; fi  # interactive

PATH=${HOME}/bin:/opt/perl/bin:/opt/SUNWspro/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/ucb:/usr/ccs/bin:/usr/openwin/bin:/usr/sfw/bin:/usr/sfw/sbin:/usr/local/bin:/usr/local/sbin:/opt/local/bin:/opt/local/sbin:/opt/csw/bin:/opt/csw/sbin
MANPATH=/usr/man:/usr/share/man:/opt/csw/man:/opt/csw/share/man:/usr/sfw/man:/usr/sfw/share/man:/opt/local/man:/usr/dt/man
LD_LIBRARY_PATH=/usr/local/lib:/opt/csw/lib:/usr/dt/lib:/usr/openwin/lib
TERM=vt100
export PATH MANPATH LD_LIBRARY_PATH TERM
;; # end SunOS

FreeBSD)
if [[ ! -z $PS1 ]]; then echo ".FreeBSD profile loaded"; fi  # interactive

PATH=${HOME}/bin:/bin:/usr/bin:/usr/local/bin:/usr/games:/usr/sbin
#TERM=vt100
TERM=xterm-256color
export PATH TERM
;; # end FreeBSD

###
# Load git-completion if git is installed
###
# Add the following lines to ~/.bashrc
# if [ -x `which git` ]; then
#     if [ -e ~/.git-completion.bash ]; then
# 	echo "Sourcing .git-completion.bash"
# 	source ~/.git-completion.bash
#     fi
# fi

# Prompt setup to revisit
# http://brettterpstra.com/my-new-favorite-bash-prompt
# NOTE: double quotes to enable $color variable expansion and \[ \] escapes
#   around them so they are not counted as character positions and the cursor
#   position is not wrong)

# example:  08:53 djackson@orlok[5740/0]:~/Documents

#function set_prompt {
#    local BLACK="\[\033[0;30m\]"   #Regular colors
#    local RED="\[\033[0;31m\]"
#    local GREEN="\[\033[0;32m\]"
#    local YELLOW="\[\033[0;33m\]"
#    local BLUE="\[\033[0;34m\]"
#    local PURPLE="\[\033[0;35m\]"
#    local CYAN="\[\033[0;36m\]"
#    local WHITE="\[\033[0;37m\]"
#
#    local BBLACK="\[\033[1;30m\]"   #Bold colors
#    local BRED="\[\033[1;31m\]"
#    local BGREEN="\[\033[1;32m\]"
#    local BYELLOW="\[\033[1;33m\]"
#    local BBLUE="\[\033[1;34m\]"
#    local BPURPLE="\[\033[1;35m\]"
#    local BCYAN="\[\033[1;36m\]"
#    local BWHITE="\[\033[1;37m\]"
#
#    # return color to Terminal setting for text color
#    local RESET="\[\033[0m\]"
#
#    if [[ -z "$SSH_CLIENT" ]]; then  # Change host to yellow sshed to it
#        local SSHUSER=${CYAN}
#        local SSHHOST=${CYAN}
#    else
#        local SSHUSER=${YELLOW}
#        local SSHHOST=${YELLOW}
#    fi
#
#    if [[ "$UNAME" == "SunOS" ]]; then
#        if [[ $EUID == '0' ]]; then
#            export PS1="${CYAN}[${RED}\u@\h(`zonename`) \w${CYAN}] ${RED}"
#        else
#            export PS1="${CYAN}[\h(`zonename`) ${RED}\w${CYAN}] ${RESET}"
#        fi
#    else
#        if [[ $EUID == '0' ]]; then
#            export PS1="${WHITE}\A ${RED}\u${PURPLE}@${RED}\h${CYAN}[${WHITE}\!${CYAN}/\`if [[ \$? = "0" ]]; then echo "\\[\\033[35m\\]"; else echo "\\[\\033[31m\\]"; fi\`\j${CYAN}]:${WHITE}\w\n${RESET}\\$ "
#        else
#            export PS1="${WHITE}\A ${SSHUSER}\u${PURPLE}@${SSHHOST}\h${CYAN}[${WHITE}\!${CYAN}/\`if [[ \$? = "0" ]]; then echo "\\[\\033[35m\\]"; else echo "\\[\\033[31m\\]"; fi\`\j${CYAN}]:${WHITE}\w\n${RESET}\\$ "
#        fi
#    fi
#}


# Set the shell prompt, check if dumb term for Emacs TRAMP
#if [[ "$TERM" == "dumb" ]]; then
#  PS1='$ '
#else
#  #set_prompt
#
#  # Shell prompt from Linux Mint (from /etc/bash.basrhc)
#  if [[ ${EUID} == 0 ]] ; then
#    PS1='\[\033[01;31m\]\h\[\033[01;34m\] \W \$\[\033[00m\] '
#  else
#    PS1='\[\033[01;32m\]\u@\h\[\033[01;34m\] \w \$\[\033[00m\] '
#  fi
#fi

# New prompt with git branch (relies on git-prompt.sh
# https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh
# http://code-worrier.com/blog/git-branch-in-bash-prompt/

WHITE="\[\033[0;37m\]"
BBLACK="\[\033[1;30m\]"   #Bold colors
BRED="\[\033[1;31m\]"
BGREEN="\[\033[1;32m\]"
BYELLOW="\[\033[1;33m\]"
BBLUE="\[\033[1;34m\]"
BPURPLE="\[\033[1;35m\]"
BCYAN="\[\033[1;36m\]"
BWHITE="\[\033[1;37m\]"
RESET="\[\033[0m\]"

#source ~/.git-prompt.sh
#PS1="\[$GREEN\]\t\[$RED\]-\[$BLUE\]\u\[$YELLOW\]\[$YELLOW\]\w\[\033[m\]\[$MAGENTA\]\$(__git_ps1)\[$WHITE\]\$ "

# http://stackoverflow.com/questions/15883416/adding-git-branch-on-the-bash-command-prompt
#if [ "${SSH_CONNECTION}" ]; then
#  PS1="${RESET}[\u@${BRED}\h${RESET} \W${BGREEN}\$(__git_ps1 ' (%s)')${RESET}]\$ "
#else
#  PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '
#fi

# Shell Prompt
#export PS1="\[\e[00;33m\]\u\[\e[0m\]\[\e[00;37m\]@\h \[\e[0m\]\[\e[00;36m\][\w]\[\e[0m\]\[\e[00;37m\] \`parse_git_branch\` \`\` \n\[\e[0m\]\[\e[00;31m\]\\$\[\e[0m\]\[\e[00;37m\] \[\e[0m\]"
#export PS1="${YELLOW}\u${RESET}${WHITE}@\h ${RESET}${CYAN}[\w]${RESET}${WHITE} \`parse_git_branch\` \`\` \n${RESET}${RED}\$${RESET}${WHITE} ${RESET}"
#PS1="${YELLOW}\u${RESET}${WHITE}@\h ${RESET}${CYAN}[\w]${RESET}${WHITE} \`parse_git_branch\`\n${WHITE}\$${RESET} "
# if CHIC02RR812G8WP change to thorn
if [[ ${HOSTNAME} == "CHIC02RR812G8WP.grubhub.local" ]];then
  PS1="${YELLOW}\u${RESET}${WHITE}@thorn ${RESET}${CYAN}[\w]${RESET}${WHITE} \`parse_git_branch\`\n${WHITE}\$${RESET} "
else
  PS1="${YELLOW}\u${RESET}${WHITE}@\h ${RESET}${CYAN}[\w]${RESET}${WHITE} \`parse_git_branch\`\n${WHITE}\$${RESET} "
fi
#\`if [[ \$? = "0" ]]; then echo '${RESET}\$'; else echo '${RED}\$${RESET}'; fi \` "
export PS1


# Debian / Ubuntu / Fedora / Other
# NOTE: PATH setup moved to bash_profile
#if [[ $(uname -a | grep Ubuntu) ]]; then
dist=`grep DIStRIB_ID /etc/*-release | awk -F '=' '{print $2}'`
if [[ "${dist}" == "Ubuntu" ]]; then
  echo "Ubuntu"
  LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30:ow=34:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:'
elif [[ -f /etc/fedora-release ]]; then
  echo "Fedora"
  LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:'
  PS1='\[\033[0;34m\][$(date +%H:%M)] \[\033[0;32m\]\u\[\033[0;36m\]@\[\033[0;32m\]\h\[\033[0;34m\] \W\[\033[0;32m\]$(parse-git-branch.sh) \[\033[0;34m\]$\[\033[00m\] '
else # CentOS or Something Else [tm]
  echo "Not Ubuntu or Fedora"
  LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35:'
fi

export PATH MANPATH TERM LS_COLORS

function mount_sshfs {
    if [ ! -d /tmp/$1 ]; then mkdir /tmp/$1; fi
    sshfs jacksond@$1: /tmp/$1 -ocache=no -onolocalcaches -ovolname=$1
}


