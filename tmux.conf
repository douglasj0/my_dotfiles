# tmux info:  http://wiki.gentoo.org/wiki/Tmux

# Syncronize all panes
# :setw synchronize-panes on

# Unbind default prefix (C-b) and rebind to C-a (could also use C-z)
unbind C-b
set -g prefix C-a
# Fix ability to go to start of line with C-a a
bind a send-prefix

# Set C-z as default prefix, double tap C-z to backgroupd process
#unbind C-b
#set-option -g prefix C-z
#bind-key z send-prefix

# Improve colors
set -g default-terminal 'screen-256color'

# Rebind the split window keys
unbind %
unbind \\
bind \ split-window -h
bind - split-window -v

# From Joel Cohen
# binds your meta key + left arrow, right, etc to switch between panes when you split your screen
#bind-key -r Left select-pane -L
#bind-key -r Right select-pane -R
#bind-key -r Down select-pane -D
#bind-key -r Up select-pane -U
#bind-key -r S-Left resize-pane -L 2
#bind-key -r S-Right resize-pane -R 2
#bind-key -r S-Down resize-pane -D 2
#bind-key -r S-Up resize-pane -U 2

# Syncronize panes - send to all panes
bind-key y set-window-option synchronize-panes

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Enable mouse-select
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
#set-window-option -g mode-mouse on

#---
# Usage:
#   <prefix> [ to start "copy-mode"
#   Move to the text you want to copy using Vim-like key bindings, i.e., k to move up a line,
#     / to search, etc.
#     v to start selection
#   Move to end of text with Vim key-bindings. The selection will be highlighted
#     y to copy the highlighted/selected text
# The selected text is now in your clipboard, and your day is that much better for it.

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Also
#  https://github.com/blueyed/dotfiles/commit/cd9e2b0115f579af0954ea89d9b542d4230df2e3

#---

# enable window titles
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P W@ #T' # windows number,program name, active(or not)

# window title string (uses statusbar variables)
#set -g set-titles-string '#T'

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# how long to show pane numbers (C-a q). Default is too fast to scan the screen.
set -g display-panes-time 2000  # (which is 2sec)

# Only show constrained view if small client is actively looking at it
setw -g aggressive-resize on

# Increase history from 2000 to 10,000
set -g history-limit 10000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# ssh to host, prompts for hostname
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

# status bar with load and time
set -g status-bg '#4e4e4e'
set -g status-fg '#ffffff'
#set -g status-left ' '
#set -g status-right '#[bg=#bbbbbb]#[fg=#000000]#(cut -d " " -f -3 /proc/loadavg) #[bg=#4e4e4e]#[fg=#ffffff]#(date +" %H:%M ")'
set -g window-status-format '#I #W'
set -g window-status-current-format ' #I #W '
setw -g window-status-current-bg '#55ff55'
setw -g window-status-current-fg '#000000'

# pane border colors
set -g pane-active-border-fg '#bbbbbb'
set -g pane-border-fg '#555555'

# bind to reload config
bind r source-file ~/.tmux.conf

# Load OS specific settings
#if-shell 'test "$(uname)" = "Linux"' 'source ~/.tmux-linux.conf'
#if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'

# Site-specific config
source-file ~/.tmux.conf.local
